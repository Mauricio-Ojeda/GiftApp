{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGift.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","placeholder","onChange","target","GifGridItem","title","url","className","src","alt","getGift","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,YAAa,gBACbC,SAnBc,SAAAR,GACtBF,EAAeE,EAAES,OAAOH,a,QCMjBI,EAXK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAG1B,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCTJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZN,EAFY,iDAEqCO,UAAWF,GAFhD,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAACc,EAAIE,cAAL,aAAC,EAAYC,iBAAiBjB,QAVtB,kBAcXY,GAdW,4CAAH,sDC+BLM,EA1BC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAGf,ECLwB,SAAEA,GAE1B,MAA0BrB,mBAAS,CAC/B2B,KAAK,GACLQ,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WAEPlB,EAASC,GACJkB,MAAM,SAAAC,GACAH,EACK,CACIV,KAAMa,EACNL,SAAS,SAM9B,CAAEd,IAEEe,EDjBwBK,CAAcpB,GAAjCW,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAMd,IAEJc,GAAW,oBAAIlB,UAAU,mBAAd,yDAEb,qBAAKA,UAAU,aAAf,SAEQe,EAAOH,KAAK,SAAAC,GAAG,OAEX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEWvBW,EA5BO,WAElB,MAAoC1C,mBAAS,CAAC,UAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAGA,OACI,qCACI,oBAAIkB,UAAU,iDAAd,2BACA,cAAC,EAAD,CACIlB,cAAkBA,IAEtB,uBACA,6BAEQS,EAAWqB,KAAK,SAACR,EAAUsB,GACzB,OAAQ,cAAC,EAAD,CAEFtB,SAAaA,GADLA,EAAWsB,YCd/CC,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d37e4f1b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = e => {\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 1){\r\n            setCategories(categories => [ inputValue, ...categories ]);\r\n            setinputValue('');    \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <input \r\n                type = \"text\"\r\n                value = {inputValue}\r\n                placeholder ='Busca tu Gift'\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default AddCategory\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n    \r\n        \r\n    return (\r\n        <div className=\"card animate__lightSpeedInRight animate__backInLeft\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGift = async( category ) =>{\r\n    \r\n    const  url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=bzfJ2m6sLAYFDW3iljr7LZnX1NlAF1up`; \r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return  gifs;\r\n}","import React  from 'react';\r\n\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n     \r\n    const {data:images, loading} = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <h2 className=\" animate__hinge \"> Cargando... üê±‚Äçüèç</h2> }\r\n            \r\n            <div className=\"card-grid \">\r\n                {\r\n                    images.map( img =>(\r\n                    \r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n\r\n                    ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGift } from '../helpers/getGift'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGift( category )\r\n            .then( imgs => {\r\n                   setState(\r\n                        {\r\n                            data: imgs,\r\n                            loading: false\r\n                        }\r\n                    )\r\n\r\n            })\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['messi'])\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2 className=\"animate__fadeInDownBig animate__fadeOutDownBig\">GiftExpertApp</h2>\r\n            <AddCategory \r\n                setCategories = { setCategories }\r\n            />\r\n            <hr/>            \r\n            <ol>\r\n                {\r\n                    categories.map( (category, index ) => {\r\n                      return  <GifGrid \r\n                            key = { category + index }\r\n                            category = { category }\r\n                        />\r\n                    })\r\n                }\r\n                \r\n            </ol>      \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GiftExpertApp from './GiftExpertApp';\n\nReactDOM.render(\n  \n    <GiftExpertApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}